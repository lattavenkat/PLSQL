1)

CREATE TABLE student( stu_id  INTEGER(4) PRIMARY KEY,stu_name  VARCHAR(30)NOT NULL,gender varchar(11) ,tot_marks integer(3));
desc student;
insert into student values(10,"Anu","Female",553);
insert into student values(20,"Anbu","Male",345);
insert into student values(30,"Malini","Female",567);
insert into student values(40,"Sankar","Male",590);
insert into student values(50,"Varshan","Male",587);
desc student;
____________________________________
stu_id	    int	        NO	PRI	
stu_name	varchar(30)	NO		
gender	    varchar(11)	YES		
tot_marks	int	        YES	
____________________________________	
-- 1(A)Select the maximum marks of a student in the table
SELECT MAX(tot_marks) FROM student;
________________
MAX(tot_marks)
590
________________
-- 1(B)Select the number of male and female students in the table
SELECT gender,count(*) FROM student group by gender;
______________________________
gender      count(*)
Female	        2
Male	        3
______________________________
-- 1 (C)Select the average marks scored by male and female group of students in the table

SELECT gender,AVG(tot_marks) FROM student group by gender;
________________________
gender  AVG(tot_marks)
Female	560.0000
Male	507.3333
_______________________
-- 1(D)select all students who scored marks greater than the average mark of the students in the 
table.

SELECT stu_name FROM student WHERE tot_marks > (SELECT AVG(tot_marks) FROM student);
_______________
stu_name
Malini
Sankar
Varshan
______________
-- 1(E)Select the group of students who scored greater average marks than the average marks of 
the entire students in the table

select stu_name,avg(tot_marks) from student where tot_marks>(select avg(tot_marks) from student);
_____________________________
stu_name        avg(mark)
492.0000	     Female
507.3333	     Male
_____________________________
-- 2(A)select all student details whose name value consists of exactly three characters.
SELECT stu_name from student where LIKE '___';
_______________
stu_name
Anu
_______________
-- 2(B)Display all students in ascending order of their sex and descending order of their marks.
SELECT * FROM student ORDER BY gender ASC , tot_marks DESC;
_________________________________________________
stu_id,    stu_name,    gender,     tot_marks
10	         Anu	    Female	    553
20	         Anbu	    Male	    345
30	        Malini  	Female      567
40	        Sankar  	Male    	590
50	        Varshan 	Male    	587
_________________________________________________
-- 3)Find the difference in marks between maximum and minimum in the class
SELECT (max(tot_marks) - min(tot_marks)) as diff FROM student;
_________
diff
245
_________
-- 4)Create a view object for student table with name ‘mytab’ by 
assuming your own condition for the selection and demonstrate 
the role of ‘with check option’ for the created view.

create view mytab as select * from student where tot_marks<=590 with check option;
stu_id, stu_name,   gender, tot_marks
10     	Anu	        Female	553
20  	Anbu	    Male	345
30  	Malini	    Female	567
50  	Varshan	    Male	587

--5)Perform 3 insertions with student table and then set a 
savepoint s1. Again, perform any two deletion. Now check the 
execution effect of ROLLBACK to s1, commit followed by another 
Rollback.

START TRANSACTION;
SELECT * FROM student;
SET sql_safe_updates=0;
insert into student values(60,"Anubha","Female",453);
insert into student values(70,"Anbumani","Female",395);

SAVEPOINT s1;
DELETE FROM student WHERE stu_id>50;
SELECT * FROM student;
ROLLBACK TO SAVEPOINT s1;
COMMIT;
_________________________________________________
stu_id, stu_name,   gender, tot_marks
10	       Anu	    Female	553
20	       Anbu	    Male	345
30         Malini	Female	567
40	       Sankar	Male	590
50	       Varshan	Male	587
60	       Anubha	Female	453
70	       Anbumani	Female	395
_________________________________________________
--6)
Write a simple PL/SQL (Anonymous block) program to find the 
square and cube values for the given number

DELIMITER //
create procedure get_math(in n1 int, in n2 int, out square int, out cubee int)
begin
set square= (n1*n1);
set cubee= (n2*n2*n2);
end//

call get_math(10,3,@a,@b);
select @a;
select @b;
________________________
@a
100
@b
27